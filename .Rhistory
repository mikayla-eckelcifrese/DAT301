MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
library(dplyr)
set.seed(100)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
class(RegressionCoefficients)
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
typeof(RegressionCoefficients)
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
lines(MaxTempF, Humidity3PM*RegressionCoefficients[1] + RegressionCoefficients[2])
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
typeof(RegressionCoefficients[1])
lines(MaxTempF, Humidity3PM*RegressionCoefficients[1] + RegressionCoefficients[2])
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
unlist(RegressionCoefficients[1])
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
unlist(RegressionCoefficients.(intercept))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
unlist(RegressionCoefficients$intercept)
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
unlist(RegressionCoefficients$intercept)
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
RegressionCoefficients$intercept
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
(unlist(RegressionCoefficients))$intercept
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
RegressionCoefficients[[1]]
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
RegressionCoefficients[1]
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
RegressionCoefficients[[1]]
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
RegressionCoefficients[[[1]]]
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
unlist(RegressionCoefficients)[[1]]
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients[1])) + unlist(RegressionCoefficients[2]))
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
#RegressionCoefficients
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients)[[1]]) + unlist(RegressionCoefficients)[[2]])
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")  #get pearson correlation coefficient to help interpret graphical results
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients)[[1]]) + unlist(RegressionCoefficients)[[2]])
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday, xlim = c(0,145), ylim = c(0, 125))
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients)[[1]]) + unlist(RegressionCoefficients)[[2]])
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday, xlim = c(0,145), ylim = c(0, 125))
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients)[[1]]) + unlist(RegressionCoefficients)[[2]], col = "Black")
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday, xlim = c(0,145), ylim = c(0, 125))
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
a = lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients)[[1]]) + unlist(RegressionCoefficients)[[2]], col = "Black")
a
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday, xlim = c(0,145), ylim = c(0, 125))
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
a = lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients)[[1]]) + unlist(RegressionCoefficients)[[2]], col = "Black")
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday, xlim = c(0,145), ylim = c(0, 125))
lines(MaxTempF, Humidity3PM*(unlist(RegressionCoefficients)[[1]]) + unlist(RegressionCoefficients)[[2]], col = "Black")
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
RegressionCoefficients = lm(Humidity3PM ~ MaxTempF)
RegressionCoefficients
library(dplyr)
set.seed(1000)
WeatherSample = (sample_n(weatherAUS_xls, 1000))
MaxTemp = WeatherSample[4]
MaxTempF = unlist(MaxTemp*(9/5)  + 32)#won't plot without doing unlist
Humidity3PM = unlist(WeatherSample[15])
RainedToday = unlist(WeatherSample[23])
RainedToday = ifelse(RainedToday == "No", "Blue", "Red")
#ifRainedToday[i] == "No", set it to "Blue", else set it to "Red".
plot(MaxTempF, Humidity3PM, xlab = "Highest Daily Temperature (F°)", ylab = "Humidity Level at 3pm (%)", col = RainedToday)
title("Maximum Daily Temperature vs Afternoon Humidity")
legend(x ="topright", legend = c("Yes", "No"), fill = c("Blue", "Red"), title = "Rain")
r = cor(as.double(MaxTempF), as.double(Humidity3PM), use = "complete.obs")
text(40, 40, paste("r = ",round(r, 3)))
Weather = weatherAUS_xls
RainedToday = Weather$RainToday
NonzeroRainfall = ifelse(RainedToday == "Yes", Weather$Rainfall)
Weather = weatherAUS_xls
RainedToday = Weather$RainToday
NonzeroRainfall = ifelse(RainedToday == "Yes", Weather$Rainfall, NA)
NonzeroRainfall
Weather = weatherAUS_xls
RainedToday = Weather$RainToday
NonzeroRainfall = ifelse(RainedToday == "Yes", Weather$Rainfall, NA)
na.rm(NonzeroRainfall)
Weather = weatherAUS_xls
RainedToday = Weather$RainToday
NonzeroRainfall = ifelse(RainedToday == "Yes", Weather$Rainfall, NA)
NonzeroRainfall = NonzeroRainfall[!in.na(NonzeroRainfall)]
Weather = weatherAUS_xls
RainedToday = Weather$RainToday
NonzeroRainfall = ifelse(RainedToday == "Yes", Weather$Rainfall, NA)
NonzeroRainfall = NonzeroRainfall[!is.na(NonzeroRainfall)]
Weather = weatherAUS_xls
RainedToday = Weather$RainToday
NonzeroRainfall = ifelse(RainedToday == "Yes", Weather$Rainfall, NA)
NonzeroRainfall = NonzeroRainfall[!is.na(NonzeroRainfall)]
NonzeroRainfall
Weather = weatherAUS_xls
RainedToday = Weather$RainToday
NonzeroRainfall = ifelse(RainedToday == "Yes", Weather$Rainfall, NA)
NonzeroRainfall = NonzeroRainfall[!is.na(NonzeroRainfall)]
